<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="PMS_DatabaseDataSet" targetNamespace="http://tempuri.org/PMS_DatabaseDataSet.xsd" xmlns:mstns="http://tempuri.org/PMS_DatabaseDataSet.xsd" xmlns="http://tempuri.org/PMS_DatabaseDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="PMS_DatabaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="PMS_DatabaseConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Project_Manager_System.My.MySettings.GlobalReference.Default.PMS_DatabaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CreateProjectTableAdapter" GeneratorDataComponentClassName="CreateProjectTableAdapter" Name="CreateProject" UserDataComponentName="CreateProjectTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PMS_DatabaseConnectionString (MySettings)" DbObjectName="dbo.CreateProject" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CreateProject] ([pname], [pdesc], [pversion]) VALUES (@pname, @pdesc, @pversion)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@pname" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="pname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@pdesc" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="pdesc" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@pversion" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="pversion" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT pname, pdesc, pversion FROM dbo.CreateProject</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="pname" DataSetColumn="pname" />
              <Mapping SourceColumn="pdesc" DataSetColumn="pdesc" />
              <Mapping SourceColumn="pversion" DataSetColumn="pversion" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CreateTableTableAdapter" GeneratorDataComponentClassName="CreateTableTableAdapter" Name="CreateTable" UserDataComponentName="CreateTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PMS_DatabaseConnectionString (MySettings)" DbObjectName="dbo.CreateTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CreateTable] ([pname], [pdesc], [pversion]) VALUES (@pname, @pdesc, @pversion)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@pname" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="pname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@pdesc" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="pdesc" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@pversion" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="pversion" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT pname, pdesc, pversion FROM dbo.CreateTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="pname" DataSetColumn="pname" />
              <Mapping SourceColumn="pdesc" DataSetColumn="pdesc" />
              <Mapping SourceColumn="pversion" DataSetColumn="pversion" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RegisterStudentTableAdapter" GeneratorDataComponentClassName="RegisterStudentTableAdapter" Name="RegisterStudent" UserDataComponentName="RegisterStudentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PMS_DatabaseConnectionString (MySettings)" DbObjectName="dbo.RegisterStudent" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[RegisterStudent] WHERE (([SID] = @Original_SID) AND ((@IsNull_SName = 1 AND [SName] IS NULL) OR ([SName] = @Original_SName)) AND ((@IsNull_SPassword = 1 AND [SPassword] IS NULL) OR ([SPassword] = @Original_SPassword)) AND ((@IsNull_GroupMember = 1 AND [GroupMember] IS NULL) OR ([GroupMember] = @Original_GroupMember)) AND ((@IsNull_GroupID = 1 AND [GroupID] IS NULL) OR ([GroupID] = @Original_GroupID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_SName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SPassword" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SPassword" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_SPassword" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GroupMember" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupMember" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_GroupMember" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupMember" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[RegisterStudent] ([SID], [SName], [SPassword], [GroupMember], [GroupID]) VALUES (@SID, @SName, @SPassword, @GroupMember, @GroupID);
SELECT SID, SName, SPassword, GroupMember, GroupID FROM RegisterStudent WHERE (SID = @SID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@SName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@SPassword" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@GroupMember" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupMember" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SID, SName, SPassword, GroupMember, GroupID FROM dbo.RegisterStudent</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[RegisterStudent] SET [SID] = @SID, [SName] = @SName, [SPassword] = @SPassword, [GroupMember] = @GroupMember, [GroupID] = @GroupID WHERE (([SID] = @Original_SID) AND ((@IsNull_SName = 1 AND [SName] IS NULL) OR ([SName] = @Original_SName)) AND ((@IsNull_SPassword = 1 AND [SPassword] IS NULL) OR ([SPassword] = @Original_SPassword)) AND ((@IsNull_GroupMember = 1 AND [GroupMember] IS NULL) OR ([GroupMember] = @Original_GroupMember)) AND ((@IsNull_GroupID = 1 AND [GroupID] IS NULL) OR ([GroupID] = @Original_GroupID)));
SELECT SID, SName, SPassword, GroupMember, GroupID FROM RegisterStudent WHERE (SID = @SID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@SName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@SPassword" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@GroupMember" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupMember" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_SName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SPassword" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SPassword" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_SPassword" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="SPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GroupMember" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupMember" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_GroupMember" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupMember" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SID" DataSetColumn="SID" />
              <Mapping SourceColumn="SName" DataSetColumn="SName" />
              <Mapping SourceColumn="SPassword" DataSetColumn="SPassword" />
              <Mapping SourceColumn="GroupMember" DataSetColumn="GroupMember" />
              <Mapping SourceColumn="GroupID" DataSetColumn="GroupID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RegisterTeacherTableAdapter" GeneratorDataComponentClassName="RegisterTeacherTableAdapter" Name="RegisterTeacher" UserDataComponentName="RegisterTeacherTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PMS_DatabaseConnectionString (MySettings)" DbObjectName="dbo.RegisterTeacher" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[RegisterTeacher] WHERE (([TID] = @Original_TID) AND ([TName] = @Original_TName) AND ([TPassword] = @Original_TPassword) AND ([GroupHead] = @Original_GroupHead) AND ([GroupID] = @Original_GroupID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_TName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="TName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_TPassword" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="TPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_GroupHead" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupHead" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[RegisterTeacher] ([TID], [TName], [TPassword], [GroupHead], [GroupID]) VALUES (@TID, @TName, @TPassword, @GroupHead, @GroupID);
SELECT TID, TName, TPassword, GroupHead, GroupID FROM RegisterTeacher WHERE (TID = @TID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@TName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="TName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@TPassword" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="TPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@GroupHead" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupHead" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TID, TName, TPassword, GroupHead, GroupID FROM dbo.RegisterTeacher</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[RegisterTeacher] SET [TID] = @TID, [TName] = @TName, [TPassword] = @TPassword, [GroupHead] = @GroupHead, [GroupID] = @GroupID WHERE (([TID] = @Original_TID) AND ([TName] = @Original_TName) AND ([TPassword] = @Original_TPassword) AND ([GroupHead] = @Original_GroupHead) AND ([GroupID] = @Original_GroupID));
SELECT TID, TName, TPassword, GroupHead, GroupID FROM RegisterTeacher WHERE (TID = @TID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@TName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="TName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@TPassword" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="TPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@GroupHead" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupHead" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_TName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="TName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_TPassword" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="TPassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_GroupHead" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GroupHead" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TID" DataSetColumn="TID" />
              <Mapping SourceColumn="TName" DataSetColumn="TName" />
              <Mapping SourceColumn="TPassword" DataSetColumn="TPassword" />
              <Mapping SourceColumn="GroupHead" DataSetColumn="GroupHead" />
              <Mapping SourceColumn="GroupID" DataSetColumn="GroupID" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="PMS_DatabaseDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="PMS_DatabaseDataSet" msprop:Generator_UserDSName="PMS_DatabaseDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="CreateProject" msprop:Generator_TableClassName="CreateProjectDataTable" msprop:Generator_TableVarName="tableCreateProject" msprop:Generator_TablePropName="CreateProject" msprop:Generator_RowDeletingName="CreateProjectRowDeleting" msprop:Generator_RowChangingName="CreateProjectRowChanging" msprop:Generator_RowEvHandlerName="CreateProjectRowChangeEventHandler" msprop:Generator_RowDeletedName="CreateProjectRowDeleted" msprop:Generator_UserTableName="CreateProject" msprop:Generator_RowChangedName="CreateProjectRowChanged" msprop:Generator_RowEvArgName="CreateProjectRowChangeEvent" msprop:Generator_RowClassName="CreateProjectRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="pname" msprop:Generator_ColumnVarNameInTable="columnpname" msprop:Generator_ColumnPropNameInRow="pname" msprop:Generator_ColumnPropNameInTable="pnameColumn" msprop:Generator_UserColumnName="pname" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="pdesc" msprop:Generator_ColumnVarNameInTable="columnpdesc" msprop:Generator_ColumnPropNameInRow="pdesc" msprop:Generator_ColumnPropNameInTable="pdescColumn" msprop:Generator_UserColumnName="pdesc" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="pversion" msprop:Generator_ColumnVarNameInTable="columnpversion" msprop:Generator_ColumnPropNameInRow="pversion" msprop:Generator_ColumnPropNameInTable="pversionColumn" msprop:Generator_UserColumnName="pversion" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CreateTable" msprop:Generator_TableClassName="CreateTableDataTable" msprop:Generator_TableVarName="tableCreateTable" msprop:Generator_TablePropName="CreateTable" msprop:Generator_RowDeletingName="CreateTableRowDeleting" msprop:Generator_RowChangingName="CreateTableRowChanging" msprop:Generator_RowEvHandlerName="CreateTableRowChangeEventHandler" msprop:Generator_RowDeletedName="CreateTableRowDeleted" msprop:Generator_UserTableName="CreateTable" msprop:Generator_RowChangedName="CreateTableRowChanged" msprop:Generator_RowEvArgName="CreateTableRowChangeEvent" msprop:Generator_RowClassName="CreateTableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="pname" msprop:Generator_ColumnVarNameInTable="columnpname" msprop:Generator_ColumnPropNameInRow="pname" msprop:Generator_ColumnPropNameInTable="pnameColumn" msprop:Generator_UserColumnName="pname" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="pdesc" msprop:Generator_ColumnVarNameInTable="columnpdesc" msprop:Generator_ColumnPropNameInRow="pdesc" msprop:Generator_ColumnPropNameInTable="pdescColumn" msprop:Generator_UserColumnName="pdesc" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="pversion" msprop:Generator_ColumnVarNameInTable="columnpversion" msprop:Generator_ColumnPropNameInRow="pversion" msprop:Generator_ColumnPropNameInTable="pversionColumn" msprop:Generator_UserColumnName="pversion" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RegisterStudent" msprop:Generator_TableClassName="RegisterStudentDataTable" msprop:Generator_TableVarName="tableRegisterStudent" msprop:Generator_TablePropName="RegisterStudent" msprop:Generator_RowDeletingName="RegisterStudentRowDeleting" msprop:Generator_RowChangingName="RegisterStudentRowChanging" msprop:Generator_RowEvHandlerName="RegisterStudentRowChangeEventHandler" msprop:Generator_RowDeletedName="RegisterStudentRowDeleted" msprop:Generator_UserTableName="RegisterStudent" msprop:Generator_RowChangedName="RegisterStudentRowChanged" msprop:Generator_RowEvArgName="RegisterStudentRowChangeEvent" msprop:Generator_RowClassName="RegisterStudentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SID" msprop:Generator_ColumnVarNameInTable="columnSID" msprop:Generator_ColumnPropNameInRow="SID" msprop:Generator_ColumnPropNameInTable="SIDColumn" msprop:Generator_UserColumnName="SID" type="xs:int" />
              <xs:element name="SName" msprop:Generator_ColumnVarNameInTable="columnSName" msprop:Generator_ColumnPropNameInRow="SName" msprop:Generator_ColumnPropNameInTable="SNameColumn" msprop:Generator_UserColumnName="SName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SPassword" msprop:Generator_ColumnVarNameInTable="columnSPassword" msprop:Generator_ColumnPropNameInRow="SPassword" msprop:Generator_ColumnPropNameInTable="SPasswordColumn" msprop:Generator_UserColumnName="SPassword" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GroupMember" msprop:Generator_ColumnVarNameInTable="columnGroupMember" msprop:Generator_ColumnPropNameInRow="GroupMember" msprop:Generator_ColumnPropNameInTable="GroupMemberColumn" msprop:Generator_UserColumnName="GroupMember" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GroupID" msprop:Generator_ColumnVarNameInTable="columnGroupID" msprop:Generator_ColumnPropNameInRow="GroupID" msprop:Generator_ColumnPropNameInTable="GroupIDColumn" msprop:Generator_UserColumnName="GroupID" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RegisterTeacher" msprop:Generator_TableClassName="RegisterTeacherDataTable" msprop:Generator_TableVarName="tableRegisterTeacher" msprop:Generator_TablePropName="RegisterTeacher" msprop:Generator_RowDeletingName="RegisterTeacherRowDeleting" msprop:Generator_RowChangingName="RegisterTeacherRowChanging" msprop:Generator_RowEvHandlerName="RegisterTeacherRowChangeEventHandler" msprop:Generator_RowDeletedName="RegisterTeacherRowDeleted" msprop:Generator_UserTableName="RegisterTeacher" msprop:Generator_RowChangedName="RegisterTeacherRowChanged" msprop:Generator_RowEvArgName="RegisterTeacherRowChangeEvent" msprop:Generator_RowClassName="RegisterTeacherRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TID" msprop:Generator_ColumnVarNameInTable="columnTID" msprop:Generator_ColumnPropNameInRow="TID" msprop:Generator_ColumnPropNameInTable="TIDColumn" msprop:Generator_UserColumnName="TID" type="xs:int" />
              <xs:element name="TName" msprop:Generator_ColumnVarNameInTable="columnTName" msprop:Generator_ColumnPropNameInRow="TName" msprop:Generator_ColumnPropNameInTable="TNameColumn" msprop:Generator_UserColumnName="TName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TPassword" msprop:Generator_ColumnVarNameInTable="columnTPassword" msprop:Generator_ColumnPropNameInRow="TPassword" msprop:Generator_ColumnPropNameInTable="TPasswordColumn" msprop:Generator_UserColumnName="TPassword">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GroupHead" msprop:Generator_ColumnVarNameInTable="columnGroupHead" msprop:Generator_ColumnPropNameInRow="GroupHead" msprop:Generator_ColumnPropNameInTable="GroupHeadColumn" msprop:Generator_UserColumnName="GroupHead">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GroupID" msprop:Generator_ColumnVarNameInTable="columnGroupID" msprop:Generator_ColumnPropNameInRow="GroupID" msprop:Generator_ColumnPropNameInTable="GroupIDColumn" msprop:Generator_UserColumnName="GroupID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RegisterStudent" />
      <xs:field xpath="mstns:SID" />
    </xs:unique>
    <xs:unique name="RegisterTeacher_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RegisterTeacher" />
      <xs:field xpath="mstns:TID" />
    </xs:unique>
  </xs:element>
</xs:schema>